/*
    ./js/Network/SubscriptionList.js
    Created 25/05/2018 at 10:38:31 from:
        Messages = msgtools/parser/test/messages//Network/SubscriptionList.yaml
        Template = Template.js
        Language = javascript

                     AUTOGENERATED FILE, DO NOT EDIT

*/
//import { NetworkHeader } from '../headers/NetworkHeader.js'
//import MessageDictionary from '../MessageDictionary.js'

var SubscriptionList = function(buffer) {
    // have baseclass construct the buffer?
    //Message.call(this, MSG_SIZE);
        
    if (buffer==undefined)
    {
        buffer = new ArrayBuffer(NetworkHeader.prototype.MSG_SIZE+SubscriptionList.prototype.MSG_SIZE);
        this.m_data = new DataView(buffer, NetworkHeader.prototype.MSG_SIZE);
        this.hdr = new NetworkHeader(buffer);
        this.hdr.SetMessageID(SubscriptionList.prototype.MSG_ID);
        this.hdr.SetDataLength(buffer.byteLength - NetworkHeader.prototype.MSG_SIZE);
        //this.InitializeTime();
        this.Init();
    }
    else
    {
        this.m_data = new DataView(buffer, NetworkHeader.prototype.MSG_SIZE);
        this.hdr = new NetworkHeader(buffer);
    }
};

// This is for 0.28.42/Messaging.js compatibility
if (typeof(MessageDictionary)!=='undefined' && MessageDictionary != null)
    // add our class to the dictionary
    MessageDictionary[4294967042] = SubscriptionList

// This is for 0.29.42/msgtools.js compatibility
if (typeof msgtools === 'object')
    msgtools.registerMessage(4294967042,SubscriptionList)

// how to make constants?
SubscriptionList.prototype.MSG_ID = 4294967042;
SubscriptionList.prototype.MSG_SIZE = 64;
SubscriptionList.prototype.MSG_NAME = "s/Network.SubscriptionList";

SubscriptionList.prototype.MsgName = function(){
    return "s/Network.SubscriptionList";
}

SubscriptionList.prototype.Init = function(){
};


// http://stackoverflow.com/a/130572
// The IDs of the messages you'd like to receive. , (0 to 4294967295)
SubscriptionList.prototype.GetIDs = function(idx)
{
    var value = (this.m_data.getUint32(0+idx*4));
    return value;
};
// The IDs of the messages you'd like to receive. , (0 to 4294967295)
SubscriptionList.prototype.SetIDs = function(value, idx)
{
    this.m_data.setUint32(0+idx*4, value);
};

// Convert to a javascript object
SubscriptionList.prototype.toObject = function(){
    ret = {};
    try { ret["IDs"] = []; } catch (err) {}
    try { 
        for(i=0; i<16; i++)
            ret["IDs"][i] = this.GetIDs(i);
    } catch (err) {}
    return ret;
}

// Reflection information
SubscriptionList.prototype.fields = [
    {name:"IDs",type:"int",units:"",minVal:"0",maxVal:"4294967295",description:"The IDs of the messages you'd like to receive.",get:"GetIDs",set:"SetIDs",count:16, bitfieldInfo : [], enumLookup : []}
]

// for react-native and node.js, we should set module.exports so our class can be accessed externally
if(typeof module != 'undefined' && typeof module.exports != 'undefined')
    module.exports.SubscriptionList = SubscriptionList;
